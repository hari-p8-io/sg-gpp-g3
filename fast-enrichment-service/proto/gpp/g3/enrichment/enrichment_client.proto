syntax = "proto3";

package gpp.g3.enrichment;

service EnrichmentService {
  // Enrich a financial message with additional data
  rpc EnrichMessage(EnrichmentRequest) returns (EnrichmentResponse);
  
  // Health check for the enrichment service
  rpc HealthCheck(HealthCheckRequest) returns (HealthCheckResponse);
}

message EnrichmentRequest {
  string message_id = 1;    // The UUID from request handler
  string puid = 2;          // The G3I identifier
  string message_type = 3;  // PACS008, PACS007, PACS003, CAMT053, etc.
  string xml_payload = 4;   // The validated XML payload
  map<string, string> metadata = 5; // Additional context data (including market)
  int64 timestamp = 6;      // Original processing timestamp
}

message EnrichmentResponse {
  string message_id = 1;         // Echo back the UUID
  string puid = 2;               // Echo back the G3I identifier
  bool success = 3;              // Whether enrichment was successful
  string enriched_payload = 4;   // The enriched XML payload
  string error_message = 5;      // Error details if success = false
  map<string, string> enrichment_data = 6; // Key-value pairs of enriched data
  int64 processed_at = 7;        // When enrichment completed
  string next_service = 8;       // Suggested next service in the pipeline
}

message HealthCheckRequest {
  string service = 1;
}

message HealthCheckResponse {
  enum ServingStatus {
    UNKNOWN = 0;
    SERVING = 1;
    NOT_SERVING = 2;
    SERVICE_UNKNOWN = 3;
  }
  ServingStatus status = 1;
  string message = 2;
} 
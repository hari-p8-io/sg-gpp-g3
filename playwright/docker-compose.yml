version: '3.8'

services:
  # Zookeeper service for Kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: zookeeper-test
    ports:
      - "22181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    healthcheck:
      test: ["CMD", "bash", "-c", "echo ruok | nc localhost 2181"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Kafka service
  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka-test
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "19092:9092"
      - "39092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:39092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    healthcheck:
      test: ["CMD", "kafka-topics", "--bootstrap-server", "localhost:9092", "--list"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Kafka UI for monitoring
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui-test
    depends_on:
      kafka:
        condition: service_healthy
    ports:
      - "18080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181

  # Spanner emulator
  spanner-emulator:
    image: gcr.io/cloud-spanner-emulator/emulator:latest
    platform: linux/amd64
    container_name: spanner-emulator-test
    ports:
      - "19010:9010"
      - "19020:9020"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9020/v1/projects/test-project/instances"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Spanner CLI for initialization
  spanner-cli:
    image: gcr.io/google.com/cloudsdktool/google-cloud-cli:latest
    platform: linux/amd64
    container_name: spanner-cli-test
    depends_on:
      spanner-emulator:
        condition: service_started
    environment:
      SPANNER_EMULATOR_HOST: spanner-emulator:9010
    volumes:
      - ./scripts/init-spanner.sh:/init-spanner.sh
    entrypoint: ["/bin/bash", "/init-spanner.sh"]

  # VAM mediation mock
  vam-mediation-mock:
    image: wiremock/wiremock:latest
    container_name: vam-mediation-mock
    ports:
      - "18091:8080"
    volumes:
      - ./mocks/vam-mediation:/home/wiremock
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/__admin/mappings"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Orchestrator service under test
  orchestrator:
    image: openjdk:21-slim
    container_name: orchestrator-test
    depends_on:
      kafka:
        condition: service_healthy
      spanner-emulator:
        condition: service_started
      vam-mediation-mock:
        condition: service_healthy
    ports:
      - "18081:8080"
    environment:
      SPRING_PROFILES_ACTIVE: test
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      SPANNER_EMULATOR_HOST: spanner-emulator:9010
      SPANNER_PROJECT_ID: test-project
      SPANNER_INSTANCE_ID: test-instance
      SPANNER_DATABASE_ID: test-db
      VAM_MEDIATION_URL: http://vam-mediation-mock:8080
    volumes:
      - ../fast-inwd-orchestrator-service/target/fast-inwd-orchestrator-service-0.0.1-SNAPSHOT.jar:/app.jar
    command: ["java", "-jar", "/app.jar"] 